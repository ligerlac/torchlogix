# Installation Guide

## Requirements

- Python 3.10 or higher
- PyTorch 2.0 or higher
- CUDA toolkit (optional, for GPU acceleration)

## Basic Installation

### Using pip

```bash
pip install torchlogix
```

### From Source

```bash
git clone https://github.com/ligerlac/torchlogix.git
cd torchlogix
pip install -e .
```

### Development Installation

For development with all dependencies:

```bash
git clone https://github.com/ligerlac/torchlogix.git
cd torchlogix
pip install -e .[dev]
```

## CUDA Extension (Optional)

For enhanced performance on CUDA-enabled GPUs:

```bash
# Set environment variable to build CUDA extensions
export TORCHLOGIX_BUILD_CUDA_EXT=true
pip install -e .[cuda]
```

### CUDA Requirements

- NVIDIA GPU with CUDA capability 3.5 or higher
- CUDA toolkit 11.8 or higher
- Compatible C++ compiler (GCC for Linux, MSVC for Windows)

## Conda Environment

For a complete environment setup:

```bash
conda env create -f environment.yml
conda activate torchlogix
pip install -e .
```

## Verification

Test your installation:

```python
import torch
import torchlogix

# Create a simple logic layer
layer = torchlogix.layers.LogicDense(in_dim=10, out_dim=5, tree_depth=2)
x = torch.randn(32, 10)
output = layer(x)
print(f"Output shape: {output.shape}")
```

## Troubleshooting

### Common Issues

**Import errors**: Ensure all dependencies are installed
```bash
pip install torch torchvision numpy scikit-learn
```

**CUDA compilation errors**: Verify CUDA toolkit installation
```bash
nvcc --version
```

**Missing dependencies**: Install development tools
```bash
# Ubuntu/Debian
sudo apt-get install build-essential

# CentOS/RHEL
sudo yum groupinstall "Development Tools"
```